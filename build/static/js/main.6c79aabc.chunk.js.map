{"version":3,"sources":["firebase.js","keys.js","actions/index.js","actions/types.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Starred.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","serviceWorker.js","reducers/index.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","setCurrentChannel","channel","type","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","primary","secondary","user","_this","props","currentUser","usersRef","database","ref","userColors","removeListener","child","concat","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","react_default","a","createElement","Fragment","key","Divider","className","onClick","setColors","style","background","openModal","this","_this$state","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","lib","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","auth","metadata","contentType","dropdownOptions","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","_this2","_this$state2","Grid","Column","Row","padding","margin","floated","pading","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","dist_default","node","image","height","border","scale","Starred","activeChannel","starredChannels","addListeners","starredChannel","Object","objectSpread","id","toConsumableArray","channelToRemove","filteredChannels","filter","setActiveChannel","changeChannel","displayChannels","Item","opacity","active","Channels","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","defineProperty","value","remove","clearNotifications","updatedNotifications","getNotificationCount","_ref","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","arguments","undefined","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","SidePanel","_this$props","fixed","fontSize","SidePanel_UserPanel","SidePanel_Starred","SidePanel_Channels","SidePanel_DirectMessages","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","_this$props2","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","ctrlKey","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","isProgressBarVisible","snapshot","downloadUrl","sendFileMessage","cancel","_this$state3","dist_es","onSelect","title","onKeyDown","labelPosition","some","Group","widths","FileModal_FileModal","Messages_ProgressBar","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","progressBar","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","Messages_Message","displayChannelName","displayTypingUsers","display","alignItems","Messages_Typing","displayMessageSkeleton","Array","_","Messages_Skeleton","prevProps","MessagesHeader_MessagesHeader","MessageForm_MessageForm","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","b","_ref2","slicedToArray","List","Description","slice","attached","Accordion","styled","Title","circular","components_ColorPanel_ColorPanel","SidePanel_SidePanel","marginLeft","components_Messages_Messages","MetaPanel_MetaPanel","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","Link","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","isUsernameValid","_ref3","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","Boolean","window","location","hostname","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","src_Spinner","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","es","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c79aabc.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport {\r\n  apiKey,\r\n  authDomain,\r\n  databaseURL,\r\n  projectId,\r\n  storageBucket,\r\n  messagingSenderId\r\n} from './keys';\r\n\r\nvar config = {\r\n  apiKey: apiKey,\r\n  authDomain: authDomain,\r\n  databaseURL: databaseURL,\r\n  projectId: projectId,\r\n  storageBucket: storageBucket,\r\n  messagingSenderId: messagingSenderId\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","const apiKey = 'AIzaSyDUmA4M66BhyCGj6yzgPC8tpg7Im8ZlNWQ',\n  authDomain = 'slack-react-trc.firebaseapp.com',\n  databaseURL = 'https://slack-react-trc.firebaseio.com',\n  projectId = 'slack-react-trc',\n  storageBucket = 'slack-react-trc.appspot.com',\n  messagingSenderId = '380185780011';\n\nexport {\n  apiKey,\n  authDomain,\n  databaseURL,\n  projectId,\n  storageBucket,\n  messagingSenderId\n};\n","import * as actionTypes from './types';\r\n\r\n/* User Actions */\r\nexport const setUser = user => {\r\n  return {\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_USER\r\n  };\r\n};\r\n\r\n/* Channel Actions */\r\nexport const setCurrentChannel = channel => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel\r\n    }\r\n  };\r\n};\r\n\r\nexport const setPrivateChannel = isPrivateChannel => {\r\n  return {\r\n    type: actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel\r\n    }\r\n  };\r\n};\r\n\r\nexport const setUserPosts = userPosts => {\r\n  return {\r\n    type: actionTypes.SET_USER_POSTS,\r\n    payload: {\r\n      userPosts\r\n    }\r\n  };\r\n};\r\n\r\n/* Colors Actions */\r\nexport const setColors = (primaryColor, secondaryColor) => {\r\n  return {\r\n    type: actionTypes.SET_COLORS,\r\n    payload: {\r\n      primaryColor,\r\n      secondaryColor\r\n    }\r\n  };\r\n};\r\n","/* User Action Types */\r\nexport const SET_USER = 'SET_USER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\n\r\n/* Channel Action Types */\r\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\r\nexport const SET_PRIVATE_CHANNEL = 'SET_PRIVATE_CHANNEL';\r\nexport const SET_USER_POSTS = 'SET_USER_POSTS';\r\n\r\n/* Colors Action Types */\r\nexport const SET_COLORS = 'SET_COLORS';\r\n","import React from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setColors } from '../../actions';\r\n// prettier-ignore\r\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\r\nimport { SliderPicker } from 'react-color';\r\n\r\nclass ColorPanel extends React.Component {\r\n  state = {\r\n    modal: false,\r\n    primary: '',\r\n    secondary: '',\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    userColors: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\r\n  };\r\n\r\n  addListener = userId => {\r\n    let userColors = [];\r\n    this.state.usersRef.child(`${userId}/colors`).on('child_added', snap => {\r\n      userColors.unshift(snap.val());\r\n      this.setState({ userColors });\r\n    });\r\n  };\r\n\r\n  handleChangePrimary = color => this.setState({ primary: color.hex });\r\n\r\n  handleChangeSecondary = color => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user.uid}/colors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary\r\n      })\r\n      .then(() => {\r\n        console.log('Colors added');\r\n        this.closeModal();\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  displayUserColors = colors =>\r\n    colors.length > 0 &&\r\n    colors.map((color, i) => (\r\n      <React.Fragment key={i}>\r\n        <Divider />\r\n        <div\r\n          className=\"color__container\"\r\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\r\n        >\r\n          <div className=\"color__square\" style={{ background: color.primary }}>\r\n            <div\r\n              className=\"color__overlay\"\r\n              style={{ background: color.secondary }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary, userColors } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\r\n        {this.displayUserColors(userColors)}\r\n\r\n        {/* Color Picker Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n              <Label content=\"Primary Color\" />\r\n              <SliderPicker\r\n                color={primary}\r\n                onChange={this.handleChangePrimary}\r\n              />\r\n            </Segment>\r\n\r\n            <Segment inverted>\r\n              <Label content=\"Secondary Color\" />\r\n              <SliderPicker\r\n                color={secondary}\r\n                onChange={this.handleChangeSecondary}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setColors }\r\n)(ColorPanel);\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport AvatarEditor from 'react-avatar-editor';\r\n\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Dropdown,\r\n  Image,\r\n  Modal,\r\n  Input,\r\n  Button\r\n} from 'semantic-ui-react';\r\n\r\nclass UserPanel extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    previewImage: '',\r\n    croppedImage: '',\r\n    blob: '',\r\n    uploadedCroppedImage: '',\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    metadata: {\r\n      contentType: 'image/jpeg'\r\n    }\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: 'user',\r\n      text: (\r\n        <span>\r\n          Signed in as <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true\r\n    },\r\n    {\r\n      key: 'avatar',\r\n      text: <span onClick={this.openModal}>Change Avatar</span>\r\n    },\r\n    {\r\n      key: 'signout',\r\n      text: <span onClick={this.handleSignout}>Sign Out</span>\r\n    }\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n\r\n    storageRef\r\n      .child(`avatars/user/${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then(snap => {\r\n        snap.ref.getDownloadURL().then(downloadURL => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage\r\n      })\r\n      .then(() => {\r\n        console.log('PhotoURL updated');\r\n        this.closeModal();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log('User avatar updated');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleChange = event => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener('load', () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log('Signed out!'));\r\n  };\r\n\r\n  render() {\r\n    const { user, modal, previewImage, croppedImage } = this.state;\r\n    const { primaryColor } = this.props;\r\n\r\n    return (\r\n      <Grid style={{ background: primaryColor }}>\r\n        <Grid.Column>\r\n          <Grid.Row style={{ padding: '1.2em', margin: 0 }}>\r\n            <Header inverted floated=\"left\" as=\"h2\">\r\n              <Icon name=\"code\" />\r\n              <Header.Content>DevChat</Header.Content>\r\n            </Header>\r\n            {/* User Dropdown */}\r\n            <Header style={{ pading: '0.25em' }} as=\"h4\" inverted>\r\n              <Dropdown\r\n                trigger={\r\n                  <span>\r\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                    {user.displayName}\r\n                  </span>\r\n                }\r\n                options={this.dropdownOptions()}\r\n              />\r\n            </Header>\r\n          </Grid.Row>\r\n\r\n          {/* Change User Avatar Modal */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid centered stackable columns={2}>\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {/* Image Preview */}\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={node => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={120}\r\n                        height={120}\r\n                        border={50}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {/* Cropped Image Preview */}\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: '3.5em auto' }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && (\r\n                <Button\r\n                  color=\"green\"\r\n                  inverted\r\n                  onClick={this.uploadCroppedImage}\r\n                >\r\n                  <Icon name=\"save\" /> Change Avatar\r\n                </Button>\r\n              )}\r\n              <Button color=\"olive\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"image\" /> Preview\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass Starred extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    activeChannel: '',\r\n    starredChannels: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n  };\r\n\r\n  addListeners = userId => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .on('child_added', snap => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        this.setState({\r\n          starredChannels: [...this.state.starredChannels, starredChannel]\r\n        });\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .on('child_removed', snap => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = this.state.starredChannels.filter(channel => {\r\n          return channel.id !== channelToRemove.id;\r\n        });\r\n        this.setState({\r\n          starredChannels: filteredChannels\r\n        });\r\n      });\r\n  };\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  displayChannels = starredChannels =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { starredChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"star\" /> STARRED\r\n          </span>{' '}\r\n          ({starredChannels.length})\r\n        </Menu.Item>\r\n        {this.displayChannels(starredChannels)}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(Starred);\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label\r\n} from 'semantic-ui-react';\r\n\r\nclass Channels extends Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: '',\r\n    channelDetails: '',\r\n    channelsRef: firebase.database().ref('channels'),\r\n    messagesRef: firebase.database().ref('messages'),\r\n    typingRef: firebase.database().ref('typing'),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on('child_added', snap => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  addNotificationListener = channelId => {\r\n    this.state.messagesRef.child(channelId).on('value', snap => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(\r\n      notification => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n    this.state.channels.forEach(channel => {\r\n      this.state.messagesRef.child(channel.id).off();\r\n    });\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL\r\n      }\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: '', channelDetails: '' });\r\n        this.closeModal();\r\n        console.log('channel added');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.state.typingRef\r\n      .child(this.state.channel.id)\r\n      .child(this.state.user.uid)\r\n      .remove();\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      notification => notification.id === this.state.channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total = this.state.notifications[\r\n        index\r\n      ].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  };\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = channel => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach(notification => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      return count;\r\n    }\r\n  };\r\n\r\n  displayChannels = channels =>\r\n    channels.length > 0 &&\r\n    channels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu className=\"menu\">\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" /> CHANNELS\r\n            </span>{' '}\r\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"About the Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(Channels);\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\n\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass DirectMessages extends Component {\r\n  state = {\r\n    activeChannel: '',\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref('users'),\r\n    connectedRef: firebase.database().ref('.info/connected'),\r\n    presenceRef: firebase.database().ref('presence')\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.usersRef.off();\r\n    this.state.presenceRef.off();\r\n    this.state.connectedRef.off();\r\n  };\r\n\r\n  addListeners = currentUserUid => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on('child_added', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user['uid'] = snap.key;\r\n        user['status'] = 'offline';\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on('value', snap => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove(err => {\r\n          if (err !== null) {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_added', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        // add status to user\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_removed', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user['status'] = `${connected ? 'online' : 'offline'}`;\r\n      }\r\n\r\n      return acc.concat(user);\r\n    }, []);\r\n\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  isUserOnline = user => user.status === 'online';\r\n\r\n  changeChannel = user => {\r\n    const channelId = this.getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  getChannelId = userId => {\r\n    const currentUserId = this.state.user.uid;\r\n\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = userId => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"mail\" /> DIRECT MESSAGES\r\n          </span>{' '}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {/* Users to Send Direct Messages */}\r\n        {users.map(user => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.7, fontStyle: 'italic' }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.isUserOnline(user) ? 'green' : 'red'}\r\n            />\r\n            @ {user.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(DirectMessages);\r\n","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport UserPanel from './UserPanel';\r\nimport Starred from './Starred';\r\nimport Channels from './Channels';\r\nimport DirectMessages from './DirectMessages';\r\n\r\nexport default class SidePanel extends Component {\r\n  render() {\r\n    const { currentUser, primaryColor } = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{ background: primaryColor, fontSize: '1.2rem' }}\r\n      >\r\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\r\n        <Starred currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Header, Segment, Input, Icon } from 'semantic-ui-react';\r\n\r\nexport default class MessagesHeader extends Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n      handleStar,\r\n      isChannelStarred\r\n    } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel title */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\r\n          <span>\r\n            {channelName}\r\n            {!isPrivateChannel && (\r\n              <Icon\r\n                onClick={handleStar}\r\n                name={isChannelStarred ? 'star' : 'star outline'}\r\n                color={isChannelStarred ? 'yellow' : 'black'}\r\n              />\r\n            )}\r\n          </span>\r\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\r\n        </Header>\r\n\r\n        {/* Channel Search Input */}\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            onChange={handleSearchChange}\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            name=\"searchTerm\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport mime from 'mime-types';\r\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\r\n\r\nexport default class FileModal extends Component {\r\n  state = {\r\n    file: null,\r\n    authorized: ['image/jpeg', 'image/png']\r\n  };\r\n\r\n  addFile = event => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = filename =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select an Image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            fluid\r\n            label=\"File types: jpg, png\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.sendFile} color=\"green\" inverted>\r\n            <Icon name=\"checkmark\" /> Send\r\n          </Button>\r\n          <Button color=\"red\" inverted onClick={closeModal}>\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Progress } from 'semantic-ui-react';\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\r\n  uploadState === 'uploading' && (\r\n    <Progress\r\n      className=\"progress__bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n    />\r\n  );\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\nimport uuidv4 from 'uuid/v4';\r\nimport firebase from '../../firebase';\r\nimport { Segment, Button, Input } from 'semantic-ui-react';\r\nimport { Picker, emojiIndex } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nimport FileModal from './FileModal';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nexport default class MessageForm extends Component {\r\n  state = {\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref('typing'),\r\n    uploadTask: null,\r\n    uploadState: '',\r\n    percentUploaded: 0,\r\n    message: '',\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n    emojiPicker: false\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.uploadTask !== null) {\r\n      this.state.uploadTask.cancel();\r\n      this.setState({ uploadTask: null });\r\n    }\r\n  }\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = event => {\r\n    if (event.ctrlKey && event.keyCode === 13) {\r\n      this.sendMessage();\r\n    }\r\n\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .set(user.displayName);\r\n    } else {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .remove();\r\n    }\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.emojiPicker });\r\n  };\r\n\r\n  handleAddEmoji = emoji => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => this.messageInputRef.focus(), 0);\r\n  };\r\n\r\n  colonToUnicode = message => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\r\n      x = x.replace(/:/g, '');\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== 'undefined') {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== 'undefined') {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = ':' + x + ':';\r\n      return x;\r\n    });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL\r\n      }\r\n    };\r\n\r\n    if (fileUrl !== null) {\r\n      message['image'] = fileUrl;\r\n    } else {\r\n      message['content'] = this.state.message;\r\n    }\r\n\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessagesRef } = this.props;\r\n    const { message, channel, user, typingRef } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n      getMessagesRef()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({\r\n            loading: false,\r\n            message: '',\r\n            errors: []\r\n          });\r\n\r\n          typingRef\r\n            .child(channel.id)\r\n            .child(user.uid)\r\n            .remove();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err)\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: 'Add a message' })\r\n      });\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private/${this.state.channel.id}`;\r\n    } else {\r\n      return `chat/public`;\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: 'uploading',\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          'state_changed',\r\n          snap => {\r\n            const percentUploaded = Math.round(\r\n              (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            this.props.isProgressBarVisible(percentUploaded);\r\n            this.setState({ percentUploaded });\r\n          },\r\n          err => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: 'error',\r\n              uploadTask: null\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then(downloadUrl => {\r\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\r\n              })\r\n              .catch(err => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: 'error',\r\n                  uploadTask: null\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: 'done' });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err)\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      errors,\r\n      message,\r\n      loading,\r\n      modal,\r\n      uploadState,\r\n      percentUploaded,\r\n      emojiPicker\r\n    } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"apple\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Pick your emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={message}\r\n          ref={node => (this.messageInputRef = node)}\r\n          style={{ marginBottom: '0.7em' }}\r\n          label={\r\n            <Button\r\n              icon={emojiPicker ? 'close' : 'add'}\r\n              content={emojiPicker ? 'Close' : null}\r\n              onClick={this.handleTogglePicker}\r\n            />\r\n          }\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some(error => error.message.includes('message'))\r\n              ? 'error'\r\n              : ''\r\n          }\r\n          placeholder=\"Write your message\"\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            disabled={uploadState === 'uploading'}\r\n            onClick={this.openModal}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Image } from 'semantic-ui-react';\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? 'message__self' : '';\r\n};\r\n\r\nconst isImage = message => {\r\n  return message.hasOwnProperty('image') && !message.hasOwnProperty('content');\r\n};\r\n\r\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message, user)}>\r\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n      {isImage(message) ? (\r\n        <Image src={message.image} className=\"message__image\" />\r\n      ) : (\r\n        <Comment.Text>{message.content}</Comment.Text>\r\n      )}\r\n    </Comment.Content>\r\n  </Comment>\r\n);\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst Typing = () => (\r\n  <div className=\"typing\">\r\n    <div className=\"typing__dot\" />\r\n    <div className=\"typing__dot\" />\r\n    <div className=\"typing__dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from 'react';\r\n\r\nconst Skeleton = () => (\r\n  <div className=\"skeleton\">\r\n    <div className=\"skeleton__avatar\" />\r\n    <div className=\"skeleton_author\" />\r\n    <div className=\"skeleton_details\" />\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Segment, Comment } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { setUserPosts } from '../../actions';\r\n\r\nimport MessagesHeader from './MessagesHeader';\r\nimport MessageForm from './MessageForm';\r\nimport Message from './Message';\r\nimport Typing from './Typing';\r\nimport Skeleton from './Skeleton';\r\n\r\nclass Messages extends Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref('privateMessages'),\r\n    messagesRef: firebase.database().ref('messages'),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    channel: this.props.currentChannel,\r\n    isChannelStarred: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    progressBar: false,\r\n    numUniqueUsers: '',\r\n    searchTerm: '',\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingRef: firebase.database().ref('typing'),\r\n    typingUsers: [],\r\n    connectedRef: firebase.database().ref('.info/connected'),\r\n    listeners: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user, listeners } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.removeListeners(listeners);\r\n      this.addListeners(channel.id);\r\n      this.addUserStarsListener(channel.id, user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners(this.state.listeners);\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  removeListeners = listeners => {\r\n    listeners.forEach(listener => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messagesEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  addToListeners = (id, ref, event) => {\r\n    const index = this.state.listeners.findIndex(listener => {\r\n      return (\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n      );\r\n    });\r\n\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event };\r\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  addListeners = channelId => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addTypingListeners = channelId => {\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on('child_added', snap => {\r\n      if (snap.key !== this.state.user.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val()\r\n        });\r\n\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, 'child_added');\r\n\r\n    this.state.typingRef.child(channelId).on('child_removed', snap => {\r\n      const index = typingUsers.findIndex(user => user.id === snap.key);\r\n\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, 'child_removed');\r\n\r\n    this.state.connectedRef.on('value', snap => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove(err => {\r\n            if (err !== null) {\r\n              console.error(err);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  addMessageListener = channelId => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n\r\n    ref.child(channelId).on('child_added', snap => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n    this.addToListeners(channelId, ref, 'child_added');\r\n  };\r\n\r\n  addUserStarsListener = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .once('value')\r\n      .then(data => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({ isChannelStarred: prevStarred });\r\n        }\r\n      });\r\n  };\r\n\r\n  getMessagesRef = () => {\r\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\r\n\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  handleStar = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        isChannelStarred: !prevState.isChannelStarred\r\n      }),\r\n      () => this.starChannel()\r\n    );\r\n  };\r\n\r\n  starChannel = () => {\r\n    if (this.state.isChannelStarred) {\r\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\r\n        [this.state.channel.id]: {\r\n          name: this.state.channel.name,\r\n          details: this.state.channel.details,\r\n          createdBy: {\r\n            name: this.state.channel.createdBy.name,\r\n            avatar: this.state.channel.createdBy.avatar\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove(err => {\r\n          if (err !== null) {\r\n            console.log(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSearchChange = event => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, 'gi');\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  countUniqueUsers = messages => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? 's' : ''}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  countUserPosts = messages => {\r\n    let userPosts = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1;\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setUserPosts(userPosts);\r\n  };\r\n\r\n  displayMessages = messages =>\r\n    messages.length > 0 &&\r\n    messages.map(message => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n  isProgressBarVisible = percent => {\r\n    if (percent > 0) {\r\n      this.setState({ progressBar: true });\r\n    }\r\n  };\r\n\r\n  displayChannelName = channel => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? '@' : '#'}${channel.name}`\r\n      : '';\r\n  };\r\n\r\n  displayTypingUsers = users =>\r\n    users.length > 0 &&\r\n    users.map(user => (\r\n      <div\r\n        style={{ display: 'flex', alignItems: 'center', marginBottom: '0.2em' }}\r\n        key={user.id}\r\n      >\r\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\r\n      </div>\r\n    ));\r\n\r\n  displayMessageSkeleton = loading =>\r\n    loading ? (\r\n      <React.Fragment>\r\n        {[...Array(10)].map((_, i) => (\r\n          <Skeleton key={i} />\r\n        ))}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n  render() {\r\n    const {\r\n      messagesRef,\r\n      messages,\r\n      channel,\r\n      user,\r\n      progressBar,\r\n      numUniqueUsers,\r\n      searchTerm,\r\n      searchResults,\r\n      searchLoading,\r\n      privateChannel,\r\n      isChannelStarred,\r\n      typingUsers,\r\n      messagesLoading\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n          handleStar={this.handleStar}\r\n          isChannelStarred={isChannelStarred}\r\n        />\r\n\r\n        <Segment>\r\n          <Comment.Group\r\n            className={progressBar ? 'messages__progress' : 'messages'}\r\n          >\r\n            {this.displayMessageSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={node => (this.messagesEnd = node)} />\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isProgressBarVisible={this.isProgressBarVisible}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setUserPosts }\r\n)(Messages);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Segment,\r\n  Accordion,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List\r\n} from 'semantic-ui-react';\r\n\r\nexport default class MetaPanel extends Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0\r\n  };\r\n\r\n  setActiveIndex = (event, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    this.setState({\r\n      activeIndex: newIndex\r\n    });\r\n  };\r\n\r\n  formatCount = num => (num > 1 || num === 0 ? `${num} posts` : `${num} post`);\r\n\r\n  displayTopPosters = posts =>\r\n    Object.entries(posts)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map(([key, val], i) => (\r\n        <List.Item key={i}>\r\n          <Image avatar src={val.avatar} />\r\n          <List.Content>\r\n            <List.Header as=\"a\">{key}</List.Header>\r\n            <List.Description>{this.formatCount(val.count)}</List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))\r\n      .slice(0, 5);\r\n\r\n  render() {\r\n    const { activeIndex, privateChannel, channel } = this.state;\r\n    const { userPosts } = this.props;\r\n\r\n    if (privateChannel) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Segment loading={!channel}>\r\n        <Header as=\"h3\" attached=\"top\">\r\n          About # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Details\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {channel && channel.details}\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Created By\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <Header as=\"h3\">\r\n              <Image circular src={channel && channel.createdBy.avatar} />\r\n              {channel && channel.createdBy.name}\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport ColorPanel from './ColorPanel/ColorPanel';\nimport SidePanel from './SidePanel/SidePanel';\nimport Messages from './Messages/Messages';\nimport MetaPanel from './MetaPanel/MetaPanel';\n\nconst App = ({\n  currentUser,\n  currentChannel,\n  isPrivateChannel,\n  userPosts,\n  primaryColor,\n  secondaryColor\n}) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel\n      key={currentUser && currentUser.uid}\n      currentUser={currentUser}\n      primaryColor={primaryColor}\n    />\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor\n});\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon\r\n} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    errors: [],\r\n    loading: false\r\n  };\r\n\r\n  displayErrors = errors =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.setState({ errors: [], loading: true });\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(signedInUser => console.log(signedInUser))\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  isFormValid = ({ email, password }) => email && password;\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\r\n      ? 'error'\r\n      : '';\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errors, loading } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"purple\" textAlign=\"center\">\r\n            <Icon name=\"code branch\" color=\"purple\" />\r\n            Login for DevChat\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={email}\r\n                className={this.handleInputError(errors, 'email')}\r\n                type=\"email\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={password}\r\n                className={this.handleInputError(errors, 'password')}\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                disabled={loading}\r\n                className={loading ? 'loading' : ''}\r\n                color=\"purple\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              {this.displayErrors(errors)}\r\n            </Message>\r\n          )}\r\n          <Message>\r\n            <span className=\"message\">Don't have an account?</span>\r\n            <Link to=\"/register\">Register</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from '../../firebase';\r\nimport md5 from 'md5';\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon\r\n} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Register extends Component {\r\n  state = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    errors: [],\r\n    loading: false,\r\n    usersRef: firebase.database().ref('users')\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: 'Fill in all fields' };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else if (!this.isPasswordValid(this.state)) {\r\n      error = { message: 'Password is invalid' };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else if (!this.isUsernameValid(this.state)) {\r\n      error = { message: 'Username may be between 3 and 30 symbols' };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      return true; // valid form\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\r\n    return (\r\n      !username.length ||\r\n      !email.length ||\r\n      !password.length ||\r\n      !passwordConfirmation.length\r\n    );\r\n  };\r\n\r\n  isPasswordValid = ({ password, passwordConfirmation }) => {\r\n    if (password.length < 6 || passwordConfirmation.length < 6) {\r\n      return false;\r\n    } else if (password !== passwordConfirmation) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isUsernameValid = ({ username }) => {\r\n    if (username.length < 3 || username.length > 30) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  displayErrors = errors =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid()) {\r\n      this.setState({ errors: [], loading: true });\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(createdUser => {\r\n          console.log(createdUser);\r\n          createdUser.user\r\n            .updateProfile({\r\n              displayName: this.state.username,\r\n              photoURL: `http://gravatar.com/avatar/${md5(\r\n                createdUser.user.email\r\n              )}?d=identicon`\r\n            })\r\n            .then(() => {\r\n              this.saveUser(createdUser).then(() => console.log('User saved'));\r\n            })\r\n            .catch(err => {\r\n              console.error(err);\r\n              this.setState({\r\n                errors: this.state.errors.concat(err),\r\n                loading: false\r\n              });\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  saveUser = createdUser => {\r\n    return this.state.usersRef.child(createdUser.user.uid).set({\r\n      name: createdUser.user.displayName,\r\n      avatar: createdUser.user.photoURL\r\n    });\r\n  };\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\r\n      ? 'error'\r\n      : '';\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      errors,\r\n      loading\r\n    } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\r\n            <Icon name=\"puzzle piece\" color=\"orange\" />\r\n            Register for DevChat\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"username\"\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                onChange={this.handleChange}\r\n                value={username}\r\n                className={this.handleInputError(errors, 'username')}\r\n                type=\"text\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={email}\r\n                className={this.handleInputError(errors, 'email')}\r\n                type=\"email\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={password}\r\n                className={this.handleInputError(errors, 'password')}\r\n                type=\"password\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"passwordConfirmation\"\r\n                icon=\"repeat\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password Confirmation\"\r\n                onChange={this.handleChange}\r\n                value={passwordConfirmation}\r\n                className={this.handleInputError(errors, 'password')}\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                disabled={loading}\r\n                className={loading ? 'loading' : ''}\r\n                color=\"orange\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              {this.displayErrors(errors)}\r\n            </Message>\r\n          )}\r\n          <Message>\r\n            <span className=\"message\">Already a user?</span>\r\n            <Link to=\"/login\">Log In</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nconst Spinner = () => (\r\n  <Dimmer active>\r\n    <Loader size=\"huge\" content={'Preparing Chat ...'} />\r\n  </Dimmer>\r\n);\r\n\r\nexport default Spinner;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport * as actionTypes from '../actions/types';\r\n\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true\r\n};\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false\r\n      };\r\n    case actionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialChannelState = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n  userPosts: null\r\n};\r\n\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel\r\n      };\r\n    case actionTypes.SET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload.userPosts\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialColorsState = {\r\n  primaryColor: '#4c3c4c',\r\n  secondaryColor: '#eee'\r\n};\r\n\r\nconst colors_reducer = (state = initialColorsState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_COLORS:\r\n      return {\r\n        primaryColor: action.payload.primaryColor,\r\n        secondaryColor: action.payload.secondaryColor\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n  channel: channel_reducer,\r\n  colors: colors_reducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport Spinner from './Spinner';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from 'react-router-dom';\n\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { setUser, clearUser } from './actions';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push('/');\n      } else {\n        this.props.history.push('/login');\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}